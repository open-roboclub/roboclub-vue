{
  "rules": {
    "downloads": {
      ".read": "true"
    },
    "robocon": {
      ".read": "true"
    },
    "robovoyage": {
      ".read": "true"
    },
    "ui": {
      ".read": "true"
    },
    "projects": {
      "$projects": {
        ".validate": "newData.hasChildren(['name', 'ongoing'])",
        "name": {
          ".validate": "newData.isString()"
        },
        "ongoing": {
          ".validate": "newData.isBoolean()"
        },
        "image": {
          ".validate": "newData.isString()"
        },
        "id": {
          ".validate": "newData.isString()"
        },
        "team": {
          ".validate": "newData.isString()"
        },
        "youtube": {
          ".validate": "newData.isString()"
        },
        "images": {
          "$key1": {
            ".validate": "newData.isString()"
          },
          ".validate": "newData.hasChildren()"
        },
        "docs": {
          "$key2": {
            ".validate": "(newData.hasChildren() && newData.hasChildren(['name', 'url']))",
            "name": {
              ".validate": "newData.isString()"
            },
            "url": {
              ".validate": "newData.isString()"
            },
            "$other": {
              ".validate": "false"
            }
          },
          ".validate": "newData.hasChildren()"
        },
        "description": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "(auth != null && root.child('admins').child(auth.uid).val() != null)"
      },
      ".read": "true",
      ".indexOn": [
        "ongoing",
        "id"
      ]
    },
    "feedback": {
      "$feedback": {
        ".validate": "newData.isString()",
        ".write": "(data.val() == null && auth != null)"
      }
    },
    "admins": {
      "$admin": {
        ".read": "(auth != null && auth.uid == $admin)"
      }
    },
    "users": {
      "$id": {
        ".validate": "(newData.hasChildren(['uid', 'email', 'emailVerified', 'name', 'photoURL']) && newData.child('providerData').val() != null)",
        "uid": {
          ".validate": "(newData.isString() && newData.val() == auth.uid)"
        },
        "email": {
          ".validate": "newData.isString()"
        },
        "emailVerified": {
          ".validate": "newData.isBoolean()"
        },
        "name": {
          ".validate": "newData.isString()"
        },
        "photoURL": {
          ".validate": "newData.isString()"
        },
        "providerData": {
          "$key3": {
            ".validate": "newData.hasChildren(['displayName', 'email', 'photoURL', 'providerId', 'uid'])",
            "displayName": {
              ".validate": "newData.isString()"
            },
            "email": {
              ".validate": "newData.isString()"
            },
            "photoURL": {
              ".validate": "newData.isString()"
            },
            "providerId": {
              ".validate": "newData.isString()"
            },
            "uid": {
              ".validate": "newData.isString()"
            },
            "$other": {
              ".validate": "false"
            }
          },
          ".validate": "newData.hasChildren()"
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "(auth != null && auth.uid == $id)",
        ".write": "((auth != null && auth.uid == $id) && newData.val() != null)"
      },
      ".read": "(auth != null && root.child('admins').child(auth.uid).val() != null)"
    },
    "news": {
      "$news": {
        ".validate": "newData.hasChildren(['notice', 'date', 'timestamp'])",
        "title": {
          ".validate": "(newData.isString() && newData.val().length >= 5)"
        },
        "notice": {
          ".validate": "(newData.isString() && newData.val().length >= 5)"
        },
        "date": {
          ".validate": "(newData.isString() && newData.val().length >= 5)"
        },
        "timestamp": {
          ".validate": "(newData.isNumber() && newData.val() <= now)"
        },
        "link": {
          ".validate": "(newData.isString() && newData.val().length >= 5)"
        },
        "notification": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": "false"
        },
        ".read": "true",
        ".write": "(auth != null && root.child('admins').child(auth.uid).val() != null)"
      },
      ".read": "true",
      ".indexOn": [
        "timestamp"
      ]
    },
    "debug": {
      "news": {
        "$news": {
          ".validate": "newData.hasChildren(['notice', 'date', 'timestamp'])",
          "title": {
            ".validate": "(newData.isString() && newData.val().length >= 5)"
          },
          "notice": {
            ".validate": "(newData.isString() && newData.val().length >= 5)"
          },
          "date": {
            ".validate": "(newData.isString() && newData.val().length >= 5)"
          },
          "timestamp": {
            ".validate": "(newData.isNumber() && newData.val() <= now)"
          },
          "link": {
            ".validate": "(newData.isString() && newData.val().length >= 5)"
          },
          "notification": {
            ".validate": "newData.isString()"
          },
          "$other": {
            ".validate": "false"
          },
          ".read": "true",
          ".write": "(auth != null && root.child('admins').child(auth.uid).val() != null)",
          ".indexOn": [
            "timestamp"
          ]
        },
        ".read": "true"
      }
    },
    "contribution": {
      "$contribution": {
        ".validate": "newData.hasChildren(['contributor', 'amount'])",
        "contributor": {
          ".validate": "newData.isString()"
        },
        "amount": {
          ".validate": "newData.isString()"
        },
        "purpose": {
          ".validate": "newData.isString()"
        },
        "remark": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "(auth != null && root.child('admins').child(auth.uid).val() != null)"
      },
      ".read": "true"
    },
    "team": {
      "$year": {
        "info": {
          ".validate": "newData.hasChildren(['session'])",
          "session": {
            ".validate": "newData.isString()"
          },
          "$other": {
            ".validate": "false"
          }
        },
        "members": {
          "$member": {
            ".validate": "(newData.hasChildren(['name', 'position', 'rank']) && newData.val() != null)",
            "uid": {
              ".validate": "(newData.isString() && (auth != null && root.child('admins').child(auth.uid).val() != null))"
            },
            "name": {
              ".validate": "newData.isString()"
            },
            "position": {
              ".validate": "(newData.isString() && (auth != null && root.child('admins').child(auth.uid).val() != null))"
            },
            "rank": {
              ".validate": "((newData.isNumber() && (auth != null && root.child('admins').child(auth.uid).val() != null)) && root.child('ui').child('ranks').child(newData.val()).val() != null)"
            },
            "thumbnail": {
              ".validate": "newData.isString()"
            },
            "links": {
              ".validate": "newData.hasChildren()",
              "email": {
                ".validate": "newData.isString()"
              },
              "mobile": {
                ".validate": "newData.isString()"
              },
              "facebook": {
                ".validate": "newData.isString()"
              },
              "linkedin": {
                ".validate": "newData.isString()"
              },
              "twitter": {
                ".validate": "newData.isString()"
              },
              "$other": {
                ".validate": "false"
              }
            },
            "profile_info": {
              ".validate": "newData.hasChildren()",
              "about": {
                ".validate": "newData.isString()"
              },
              "batch": {
                ".validate": "newData.isString()"
              },
              "cv": {
                ".validate": "newData.isString()"
              },
              "interests": {
                "$key4": {
                  ".validate": "newData.isString()"
                },
                ".validate": "newData.hasChildren()"
              },
              "projects": {
                "$key5": {
                  ".validate": "(newData.hasChildren() && newData.hasChildren(['id', 'name']))",
                  "id": {
                    ".validate": "newData.isString()"
                  },
                  "name": {
                    ".validate": "newData.isString()"
                  },
                  "$other": {
                    ".validate": "false"
                  }
                },
                ".validate": "newData.hasChildren()"
              },
              "$other": {
                ".validate": "false"
              }
            },
            "old_avatars": {
              "$key4": {
                ".validate": "newData.isString()"
              },
              ".validate": "newData.hasChildren()"
            },
            "$other": {
              ".validate": "false"
            },
            ".write": "((auth != null && root.child('admins').child(auth.uid).val() != null) || (auth != null && auth.uid == data.child('uid').val()))"
          },
          ".indexOn": [
            "uid",
            "position",
            "rank"
          ]
        },
        ".read": "true"
      }
    },
    "inventory": {
      ".read": "true"
    },
    "members": {
      "$members": {
        ".validate": "newData.hasChildren(['timestamp', 'course', 'email', 'paymentStatus', 'enrollmentNumber', 'facultyNumber', 'mobile', 'name'])",
        "timestamp": {
          ".validate": "(newData.isNumber() && newData.val() <= now)"
        },
        "course": {
          ".validate": "newData.isString()"
        },
        "email": {
          ".validate": "newData.isString()"
        },
        "paymentStatus": {
          ".validate": "newData.isBoolean()"
        },
        "enrollmentNumber": {
          ".validate": "(newData.isString() && newData.val().length == 6)"
        },
        "facultyNumber": {
          ".validate": "(newData.isString() && newData.val().length == 8)"
        },
        "mobile": {
          ".validate": "(newData.isString() && newData.val().length == 10)"
        },
        "name": {
          ".validate": "newData.isString()"
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "true"
      },
      ".read": "((auth != null && root.child('admins').child(auth.uid).val() != null) || (auth != null && auth.uid == data.child('uid').val()))"
    }
  }
}
